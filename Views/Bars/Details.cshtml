@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@model Asp.net_Core_Project.ViewModels.BarDetailsViewModel




@{
    ViewData["Title"] = "Details";
}


<div class="details-content align-content-center" >

    <img src="@Model.ImageUrl" class="card-img-details" style="height:280px;" >
    <br>
    <div style="margin-top:5rem">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ReservePlacesModal">Reserve Place in @Model.Name</button>
        <button type="button" asp-action="Bars" class="btn btn-primary">Back to list!</button>
       @*Reservation Modal*@
        <div class="modal" tabindex="-1" role="dialog" id="ReservePlacesModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Reserve Place in @Model.Name</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div>
                            @await Html.PartialAsync("ReservationPlacesModal.cshtml", @Model.Reservation)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (this.UserManager.GetUserId(this.User) == Model.OwnerId)
        {
            <button type="button" asp-action="Delete" class="btn btn-primary">Delete</button>
            <button type="button" asp-action="Edit" class="btn btn-primary">Edit</button>
        }

    </div>
</div>
